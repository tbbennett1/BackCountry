!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){const n=o(1);window.addEventListener("DOMContentLoaded",e=>{console.log("were in the event listener");const t=document.getElementById("canvas");let o=t.getContext("2d");new n(o,t).draw()})},function(e,t){e.exports=function e(t,o){const n=o.width=window.innerWidth,r=o.height=window.innerHeight;let l=0,i=1,a=n/2,c=[],s=!1,f=!0,d=0;e.prototype.drawObstacle=function(e,t,o,n,r,l){if("tree"===t){e.fillStyle="#624D6E";const t=new Path2D;t.moveTo(o+l/2,n),t.lineTo(o,n+.9*r),t.lineTo(o+.33*l,n+.85*r),t.lineTo(o+.33*l,n+r),t.lineTo(o+.66*l,n+r),t.lineTo(o+.66*l,n+.85*r),t.lineTo(o+l,n+.9*r),t.closePath(),e.fill(t)}else if("mound"===t){e.strokeStyle="#868999",e.lineWidth=1;const t=new Path2D;t.moveTo(o,n),t.quadraticCurveTo(o+l/2,n-r,o+l,n),e.stroke(t)}else console.error("Drawing error")},e.prototype.createObstacle=function(){const e=["tree","mound"][Math.round(Math.random())];if("tree"===e){const e=Math.floor(20*Math.random())+25;c.push({type:"tree",x:Math.round(n*Math.random()),y:r,height:e,width:e/2})}else if("mound"===e){const e=Math.floor(10*Math.random())+10;c.push({type:"mound",x:Math.round(n*Math.random()),y:r,height:e/2,width:e})}else console.error("Creation error");c.length>0&&c[0].y<0-c[0].height&&c.shift()},e.prototype.draw=function(){t.clearRect(0,0,n,r),d++,t.fillStyle="#9B000F",d<10&&(t.textAlign="center",t.fillStyle="#111213",t.font="40px Helvetica",t.fillText("BackCountry",n/2,60),t.font="20px Helvetica",t.fillText("Press an arrow key to start",n/2,100),t.font="16px Helvetica",t.fillText("Use ← and → to steer",n/2,124),t.fillStyle="#E8E9EE"),t.textAlign="start",t.font="14px Helvetica",t.fillText(`Score: ${Math.floor((d-1)/4)} feet`,10,25);const o=new Path2D;o.moveTo(a-8-2*l,r/4),o.lineTo(a-1-2*l,r/4),o.lineTo(a-1+2*l,r/4+25),o.lineTo(a-8+2*l,r/4+25),o.closePath(),t.fill(o),c=c.map(function(e){return{type:e.type,x:e.x,y:e.y-i,height:e.height,width:e.width}}),a<0?a+=Math.abs(l/2):a>n?a-=Math.abs(l/2):a+=l/2,c.forEach(function(o){e.prototype.drawObstacle(t,o.type,o.x,o.y,o.height,o.width),o.y+o.height>r/4-16&&o.y<r/4&&o.x-o.width/2<a&&o.x+o.width/2>a&&"tree"==o.type&&(console.log("crash!"),e.prototype.stopGame(),s=!1,t.fillStyle="#9B000F",t.font="16px Helvetica",t.fillText("YOU CRASHED!!!",10,60),t.fillStyle="#111213",t.fillText(`You traveled ${Math.floor((d-1)/4)} feet.`,10,80),t.fillText("Press space to restart.",10,100))})},e.prototype.handleKey=function(t){const o=t.key,n=t.keyCode;f&&("ArrowLeft"===o&&l>-2?l--:"ArrowRight"===o&&l<2?l++:"ArrowDown"===o?i++:"ArrowUp"===o&&i--,e.prototype.startGame(),s=!0),32===n&&!1===s&&window.location.reload(!0)},e.prototype.startGame=function(){s||(console.log("Here we go"),obstacleInterval=setInterval(this.createObstacle,50),gameInterval=setInterval(this.draw,1))},e.prototype.stopGame=function(){s&&(clearInterval(obstacleInterval),clearInterval(gameInterval),f=!1)},document.addEventListener("keydown",e.prototype.handleKey),this.draw()}}]);